/* ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~ */
/*  Property Lists                           */
/* ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~ */

.everyday-heroes .properties {
	display: grid;
	border: 1px solid var(--eh-border-color-strong);
	border-radius: 4px;
	background-color: var(--eh-background-color-black);
	color: var(--eh-text-color-white);
	font-size: var(--font-size-14);
	font-variant: small-caps;
}
.everyday-heroes .properties > fieldset {
	margin: 1px;
	border-radius: 4px;
	background-color: var(--eh-background-color-dark);
}
/* .everyday-heroes .properties > fieldset:has([checked]) { */
.everyday-heroes .properties > fieldset:is(.add, .checked, .remove) {
	background-color: var(--eh-background-color-light);
	color: var(--eh-text-color-black);
}
.everyday-heroes .properties > fieldset label {
	display: flex;
	align-items: center;
	gap: 0.25em;
	padding-inline-end: 0.5em;
}
.everyday-heroes .properties > fieldset input {
	appearance: none;
	border: 1px solid var(--eh-border-color-strong);
	border-radius: 50%;
	background-color: var(--eh-background-color-white);
	filter: none;
}
.everyday-heroes .properties > fieldset input[checked] {
	background-color: var(--eh-input-color-add);
}
.everyday-heroes .properties > fieldset input[disabled] {
	background-color: var(--eh-input-color-disabled);
}
.everyday-heroes .properties > fieldset input[checked][disabled] {
	background-color: var(--eh-input-color-disabled-checked);
}
.everyday-heroes .properties > fieldset.remove input[checked] {
	background-color: var(--eh-input-color-remove);
}
.everyday-heroes .properties > fieldset input[checked]::after {
	width: 100%;
	height: 100%;
	display: flex;
	align-items: center;
	justify-content: center;
	/* margin-block-start: -2px; */
	font-size: var(--font-size-24);
	font-weight: bold;
}
.everyday-heroes .properties > fieldset.add input[checked]::after {
	content: "+";
}
.everyday-heroes .properties > fieldset.remove input[checked]::after {
	content: "-";
}
.everyday-heroes .properties > fieldset:not(.disabled) :is(label, input) {
	cursor: pointer;
}

/* ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~ */
/*  Skewed Buttons                           */
/* ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~ */

.everyday-heroes {
	:is(nav, li).skewed {
		transform: skew(-16deg);
		margin-block-start: 1em;
		margin-inline: 0.25em;
		border: 2px solid var(--eh-border-color-strong);
		background-color: var(--eh-background-color-white);
		color: var(--eh-text-color-black);
	}
	nav.skewed {
		ul {
			display: flex;
			margin: 0;
			padding: 0;
			list-style: none;
		}
		li {
			flex-grow: 1;
			text-align: center;

			@supports not selector(:has(a)) {
				&:hover, &:focus-visible {
					box-shadow: inset 0 0 5px var(--color-shadow-primary);
				}
				&:focus-visible {
					outline: 2px solid var(--color-shadow-primary);
					outline-offset: 4px;
				}
			}
			&:not(:last-of-type) {
				border-inline-end: 1px solid var(--eh-border-color-weak);
			}
		}
	}
	nav.skewed li, li.skewed {
		&:has(:is(a:not([data-action]), button:disabled)) {
			cursor: none;
		}
		&:not(:has(:is(a:not([data-action]), button:disabled))) {
			&:hover, &:has(:focus-visible) {
				box-shadow: inset 0 0 5px var(--color-shadow-primary);
			}
			&:has(:focus-visible) {
				outline: 2px solid var(--color-shadow-primary);
				outline-offset: 4px;
			}
		}
		> a, > button {
			display: block;
			transform: skew(16deg);
			margin: 0;
			border: none;
			padding: 0.25em;
			background: none;

			&:hover, &:focus, &:focus-visible {
				box-shadow: none;
				text-shadow: none;
				outline: none;
			}
		}
		> :is(a:not([data-action]), button:disabled) {
			opacity: 0.5;
			cursor: default;
		}
	}
}

button.skewed {
	position: relative;
	isolation: isolate;
	width: calc(100% - 0.5em);
	border: none;
	background: none;
	margin-inline: 0.25em;
	padding: 0.25em;
	color: var(--eh-text-color-black);

	&::before {
		content: "";
		position: absolute;
		inset: 0;
		z-index: -1;
		border: 2px solid var(--eh-border-color-strong);
		background-color: var(--eh-background-color-white);
		transform: skew(-16deg);
	}
	&:hover, &:focus, &:focus-visible {
		box-shadow: none;
		outline: none;
	}
	&:not(:disabled) {
		&:hover::before, &:focus-visible::before {
			box-shadow: inset 0 0 5px var(--color-shadow-primary);
		}
		&:focus-visible::before {
			outline: 2px solid var(--color-shadow-primary);
			outline-offset: 2px;
		}
	}
	&:disabled {
		cursor: default;
		color: color-mix(in oklab, var(--eh-text-color-black), transparent);
		&::before {
			border-color: color-mix(in oklab, var(--eh-border-color-strong), white 70%);
		}
	}
}

.hidden-dc { display: contents; }
.visible-dc { display: none; }
[data-display-challenge] {
	.hidden-dc { display: none; }
	.visible-dc { display: contents; }
}

/* ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~ */
/*  Tag Input                                */
/* ~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~-~ */

.everyday-heroes fieldset .tag-input {
	display: flex;
	flex-wrap: wrap;
	gap: 0.5em;
	padding-inline: 0.25em;
	padding-block: 0.25em;
}
.everyday-heroes fieldset .tag-input > .tag {
	background-color: var(--eh-tag-color-property);
	border-radius: 3px;
	padding-inline: 0.5em;
}
.everyday-heroes fieldset .tag-input > .tag > [data-action="delete"] {
	opacity: 75%;
	padding-inline-start: 0.25em;
}
.everyday-heroes fieldset .tag-input > input {
	flex: 1 0 3em;
	width: unset;
	min-width: 3em;
	margin: -0.25em;
	margin-inline-end: 0;
}
